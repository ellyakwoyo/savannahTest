basePath: /app/v1
definitions:
  models.Customer:
    type: object
  models.Order:
    type: object
  models.Product:
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is an example of a Golang project with Swagger integration.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: SavannahTest API
  version: "1.0"
paths:
  /:
    get:
      description: Displays a simple HTML page with a link to log in with Google.
      produces:
      - text/html
      responses:
        "200":
          description: HTML content
          schema:
            type: string
      summary: Show Home page with login option
      tags:
      - Authentication
  /auth/callback:
    get:
      description: Handles the callback from Google after authentication. Creates
        a session token and sets it in a cookie.
      produces:
      - application/json
      responses:
        "200":
          description: Authentication success with user and session token
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Authentication failed
          schema:
            type: string
        "500":
          description: Session generation failed
          schema:
            type: string
      summary: Google OAuth2 callback handler
      tags:
      - Authentication
  /customers:
    get:
      description: Fetches all customers from the database.
      produces:
      - application/json
      responses:
        "200":
          description: Customers fetched successfully
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Retrieve all customers
      tags:
      - Customer
    post:
      consumes:
      - application/json
      description: Create a customer with a name and code.
      parameters:
      - description: Customer data
        in: body
        name: customer
        required: true
        schema:
          $ref: '#/definitions/models.Customer'
      produces:
      - application/json
      responses:
        "200":
          description: Customer created successfully
          schema:
            type: body
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Create a new customer
      tags:
      - Customer
  /customers/{id}:
    delete:
      description: Deletes a customer by ID.
      parameters:
      - description: Customer ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Customer deleted successfully
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Customer not found
          schema:
            additionalProperties: true
            type: object
      summary: Delete a customer
      tags:
      - Customer
    get:
      description: Fetches a single customer using their ID.
      parameters:
      - description: Customer ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Customer fetched successfully
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Customer not found
          schema:
            additionalProperties: true
            type: object
      summary: Retrieve a customer by ID
      tags:
      - Customer
    put:
      consumes:
      - application/json
      description: Updates the customer details by ID.
      parameters:
      - description: Customer ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated customer data
        in: body
        name: customer
        required: true
        schema:
          $ref: '#/definitions/models.Customer'
      produces:
      - application/json
      responses:
        "200":
          description: Customer updated successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Update an existing customer
      tags:
      - Customer
  /login:
    get:
      description: Redirects the user to Google's OAuth2 login page to begin authentication.
      parameters:
      - default: google
        description: OAuth provider
        in: query
        name: provider
        required: true
        type: string
      produces:
      - application/json
      responses:
        "302":
          description: Redirects to Google login page
      summary: Start Google OAuth2 login
      tags:
      - Authentication
  /orders:
    get:
      description: Retrieves all orders in the system
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Order'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get all orders
      tags:
      - Orders
    post:
      consumes:
      - application/json
      description: Creates a new order in the system
      parameters:
      - description: Order Data
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/models.Order'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Order'
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Create a new order
      tags:
      - Orders
  /orders/{id}:
    delete:
      description: Deletes an order from the system by ID
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: Order deleted
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid ID
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Order not found
          schema:
            additionalProperties: true
            type: object
      summary: Delete an order
      tags:
      - Orders
    get:
      description: Retrieves an order by its ID
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Order'
        "400":
          description: Invalid ID
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Order not found
          schema:
            additionalProperties: true
            type: object
      summary: Get order by ID
      tags:
      - Orders
    put:
      consumes:
      - application/json
      description: Updates an order's details by ID
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated Order Data
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/models.Order'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Order'
        "400":
          description: Invalid ID or request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Order not found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Update an order
      tags:
      - Orders
  /products:
    get:
      description: Fetches all products from the database.
      produces:
      - application/json
      responses:
        "200":
          description: Products fetched successfully
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Retrieve all products
      tags:
      - Product
    post:
      consumes:
      - application/json
      description: Create a product with name, description, and price.
      parameters:
      - description: Product data
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.Product'
      produces:
      - application/json
      responses:
        "200":
          description: Product created successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Create a new product
      tags:
      - Product
  /products/{id}:
    delete:
      description: Deletes a product by ID.
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Product deleted successfully
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Product not found
          schema:
            additionalProperties: true
            type: object
      summary: Delete a product
      tags:
      - Product
    get:
      description: Fetches a single product using its ID.
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Product fetched successfully
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Product not found
          schema:
            additionalProperties: true
            type: object
      summary: Retrieve a product by ID
      tags:
      - Product
    put:
      consumes:
      - application/json
      description: Updates the product details by ID.
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated product data
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.Product'
      produces:
      - application/json
      responses:
        "200":
          description: Product updated successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Update an existing product
      tags:
      - Product
swagger: "2.0"
